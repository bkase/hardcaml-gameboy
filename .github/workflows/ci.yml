name: CI

on:
  push:
    branches: [main, master]
    paths-ignore:
      - "docs/**"
      - "CLAUDE.md"
      - "*.md"
      - "cleanup-todos.md"
  pull_request:
    branches: [main, master]
    paths-ignore:
      - "docs/**"
      - "CLAUDE.md"
      - "*.md"
      - "cleanup-todos.md"

jobs:
  hardcaml-gameboy:
    name: HardCaml GameBoy Build and Test
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    env:
      OPAMYES: "true"

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Nix
        uses: cachix/install-nix-action@v25
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes

      - name: Setup Nix cache
        uses: cachix/cachix-action@v14
        with:
          name: bkase1
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - name: Cache opam directory
        id: opam-cache
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}/opam
          key: ${{ runner.os }}-opam-${{ hashFiles('hardcaml-gameboy.opam') }}
          restore-keys: |
            ${{ runner.os }}-opam-

      - name: First time setup
        env:
          OPAMROOT: ${{ runner.temp }}/opam
        run: make setup
        shell: nix develop --command bash -e {0}

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: |
            _build/
            out/
            vendor/SameBoy/build/
          key: ${{ runner.os }}-hardcaml-gameboy-${{ hashFiles('**/dune-project', '**/Makefile', 'flake.lock') }}
          restore-keys: |
            ${{ runner.os }}-hardcaml-gameboy-

      - name: Check format
        env:
          OPAMROOT: ${{ runner.temp }}/opam
        run: make check-format
        shell: nix develop --command bash -e {0}

      - name: Build project
        env:
          OPAMROOT: ${{ runner.temp }}/opam
        run: make build
        shell: nix develop --command bash -e {0}

      - name: Build tools and ROMs
        env:
          OPAMROOT: ${{ runner.temp }}/opam
        run: make tools roms
        shell: nix develop --command bash -e {0}

      - name: Run tests
        env:
          OPAMROOT: ${{ runner.temp }}/opam
        run: make test
        shell: nix develop --command bash -e {0}

      - name: Generate Verilog
        env:
          OPAMROOT: ${{ runner.temp }}/opam
        run: make synth
        shell: nix develop --command bash -e {0}
