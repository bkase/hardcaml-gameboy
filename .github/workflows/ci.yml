name: CI

on:
  push:
    branches: [main, master]
    paths-ignore:
      - "docs/**"
      - "CLAUDE.md"
      - "*.md"
      - "cleanup-todos.md"
  pull_request:
    branches: [main, master]
    paths-ignore:
      - "docs/**"
      - "CLAUDE.md"
      - "*.md"
      - "cleanup-todos.md"

jobs:
  hardcaml-gameboy:
    name: HardCaml GameBoy Build and Test
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Nix
        uses: cachix/install-nix-action@v24
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes

      - name: Setup Nix cache
        uses: cachix/cachix-action@v12
        with:
          name: nix-community
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - name: Install RGB tools (Ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y rgbds

      - name: Install RGB tools (macOS only)
        if: matrix.os == 'macos-latest'
        run: |
          brew install rgbds

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: |
            _build/
            out/
            vendor/SameBoy/build/
          key: ${{ runner.os }}-hardcaml-gameboy-${{ hashFiles('**/dune-project', '**/Makefile', 'flake.lock') }}
          restore-keys: |
            ${{ runner.os }}-hardcaml-gameboy-

      - name: Check format
        run: |
          nix develop --command make check-format

      - name: Build project
        run: |
          nix develop --command make build

      - name: Build tools and ROMs
        run: |
          nix develop --command make tools roms

      - name: Run tests
        run: |
          nix develop --command make test

      - name: Generate Verilog
        run: |
          nix develop --command make synth
